/*
 * This file is generated by jOOQ.
*/
package cn.hlvan.database.tables;


import cn.hlvan.database.Indexes;
import cn.hlvan.database.Keys;
import cn.hlvan.database.Super;
import cn.hlvan.database.tables.records.CommodityStockRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommodityStock extends TableImpl<CommodityStockRecord> {

    private static final long serialVersionUID = -282273838;

    /**
     * The reference instance of <code>super.commodity_stock</code>
     */
    public static final CommodityStock COMMODITY_STOCK = new CommodityStock();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CommodityStockRecord> getRecordType() {
        return CommodityStockRecord.class;
    }

    /**
     * The column <code>super.commodity_stock.id</code>. 商品库存
     */
    public final TableField<CommodityStockRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "商品库存");

    /**
     * The column <code>super.commodity_stock.enabled</code>. 0-上架，1-下架
     */
    public final TableField<CommodityStockRecord, Boolean> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'1'", org.jooq.impl.SQLDataType.BIT)), this, "0-上架，1-下架");

    /**
     * The column <code>super.commodity_stock.picture</code>. 商品图片
     */
    public final TableField<CommodityStockRecord, String> PICTURE = createField("picture", org.jooq.impl.SQLDataType.VARCHAR(255), this, "商品图片");

    /**
     * The column <code>super.commodity_stock.created_at</code>.
     */
    public final TableField<CommodityStockRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>super.commodity_stock.updated_at</code>.
     */
    public final TableField<CommodityStockRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>super.commodity_stock.price</code>. 商品价格
     */
    public final TableField<CommodityStockRecord, BigDecimal> PRICE = createField("price", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "商品价格");

    /**
     * The column <code>super.commodity_stock.pass_time</code>. 过期时间
     */
    public final TableField<CommodityStockRecord, Timestamp> PASS_TIME = createField("pass_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "过期时间");

    /**
     * The column <code>super.commodity_stock.attribute</code>. 规格
     */
    public final TableField<CommodityStockRecord, String> ATTRIBUTE = createField("attribute", org.jooq.impl.SQLDataType.VARCHAR(500), this, "规格");

    /**
     * The column <code>super.commodity_stock.commodity_id</code>. 商品id
     */
    public final TableField<CommodityStockRecord, Integer> COMMODITY_ID = createField("commodity_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商品id");

    /**
     * The column <code>super.commodity_stock.discount_price</code>. 优惠价
     */
    public final TableField<CommodityStockRecord, BigDecimal> DISCOUNT_PRICE = createField("discount_price", org.jooq.impl.SQLDataType.DECIMAL(10, 2), this, "优惠价");

    /**
     * The column <code>super.commodity_stock.total</code>. 库存
     */
    public final TableField<CommodityStockRecord, Integer> TOTAL = createField("total", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "库存");

    /**
     * Create a <code>super.commodity_stock</code> table reference
     */
    public CommodityStock() {
        this(DSL.name("commodity_stock"), null);
    }

    /**
     * Create an aliased <code>super.commodity_stock</code> table reference
     */
    public CommodityStock(String alias) {
        this(DSL.name(alias), COMMODITY_STOCK);
    }

    /**
     * Create an aliased <code>super.commodity_stock</code> table reference
     */
    public CommodityStock(Name alias) {
        this(alias, COMMODITY_STOCK);
    }

    private CommodityStock(Name alias, Table<CommodityStockRecord> aliased) {
        this(alias, aliased, null);
    }

    private CommodityStock(Name alias, Table<CommodityStockRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Super.SUPER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COMMODITY_STOCK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CommodityStockRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COMMODITY_STOCK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CommodityStockRecord> getPrimaryKey() {
        return Keys.KEY_COMMODITY_STOCK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CommodityStockRecord>> getKeys() {
        return Arrays.<UniqueKey<CommodityStockRecord>>asList(Keys.KEY_COMMODITY_STOCK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommodityStock as(String alias) {
        return new CommodityStock(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommodityStock as(Name alias) {
        return new CommodityStock(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CommodityStock rename(String name) {
        return new CommodityStock(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CommodityStock rename(Name name) {
        return new CommodityStock(name, null);
    }
}

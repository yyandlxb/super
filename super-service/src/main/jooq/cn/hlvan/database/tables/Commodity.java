/*
 * This file is generated by jOOQ.
*/
package cn.hlvan.database.tables;


import cn.hlvan.database.Indexes;
import cn.hlvan.database.Keys;
import cn.hlvan.database.Super;
import cn.hlvan.database.tables.records.CommodityRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Commodity extends TableImpl<CommodityRecord> {

    private static final long serialVersionUID = -739607479;

    /**
     * The reference instance of <code>super.commodity</code>
     */
    public static final Commodity COMMODITY = new Commodity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CommodityRecord> getRecordType() {
        return CommodityRecord.class;
    }

    /**
     * The column <code>super.commodity.id</code>. 商品id
     */
    public final TableField<CommodityRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "商品id");

    /**
     * The column <code>super.commodity.name</code>. 商品名称
     */
    public final TableField<CommodityRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "商品名称");

    /**
     * The column <code>super.commodity.commodity_classify_id</code>. 分类id
     */
    public final TableField<CommodityRecord, Integer> COMMODITY_CLASSIFY_ID = createField("commodity_classify_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "分类id");

    /**
     * The column <code>super.commodity.describe</code>. 商品简介
     */
    public final TableField<CommodityRecord, String> DESCRIBE = createField("describe", org.jooq.impl.SQLDataType.VARCHAR(255), this, "商品简介");

    /**
     * The column <code>super.commodity.enabled</code>. 0-上架，1-下架
     */
    public final TableField<CommodityRecord, Boolean> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'1'", org.jooq.impl.SQLDataType.BIT)), this, "0-上架，1-下架");

    /**
     * The column <code>super.commodity.picture</code>. 商品图片
     */
    public final TableField<CommodityRecord, String> PICTURE = createField("picture", org.jooq.impl.SQLDataType.VARCHAR(255), this, "商品图片");

    /**
     * The column <code>super.commodity.created_at</code>.
     */
    public final TableField<CommodityRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>super.commodity.updated_at</code>.
     */
    public final TableField<CommodityRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>super.commodity.merchant_id</code>. 供应商id
     */
    public final TableField<CommodityRecord, Integer> MERCHANT_ID = createField("merchant_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "供应商id");

    /**
     * The column <code>super.commodity.sale_total</code>. 销售量
     */
    public final TableField<CommodityRecord, Integer> SALE_TOTAL = createField("sale_total", org.jooq.impl.SQLDataType.INTEGER, this, "销售量");

    /**
     * The column <code>super.commodity.details</code>. 商品详情
     */
    public final TableField<CommodityRecord, String> DETAILS = createField("details", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "商品详情");

    /**
     * Create a <code>super.commodity</code> table reference
     */
    public Commodity() {
        this(DSL.name("commodity"), null);
    }

    /**
     * Create an aliased <code>super.commodity</code> table reference
     */
    public Commodity(String alias) {
        this(DSL.name(alias), COMMODITY);
    }

    /**
     * Create an aliased <code>super.commodity</code> table reference
     */
    public Commodity(Name alias) {
        this(alias, COMMODITY);
    }

    private Commodity(Name alias, Table<CommodityRecord> aliased) {
        this(alias, aliased, null);
    }

    private Commodity(Name alias, Table<CommodityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Super.SUPER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COMMODITY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CommodityRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COMMODITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CommodityRecord> getPrimaryKey() {
        return Keys.KEY_COMMODITY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CommodityRecord>> getKeys() {
        return Arrays.<UniqueKey<CommodityRecord>>asList(Keys.KEY_COMMODITY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Commodity as(String alias) {
        return new Commodity(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Commodity as(Name alias) {
        return new Commodity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Commodity rename(String name) {
        return new Commodity(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Commodity rename(Name name) {
        return new Commodity(name, null);
    }
}
